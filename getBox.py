import cv2, numpy
import json

from func import *

#note
# structures =[{'QR': [-0.00020157226365652087, -0.00014253135689851768, -0.00020157226365652087, -0.00014253135689851768], 'sub-heading': [0.26728482160854666, 0.014965792474344356, 0.5093731102600282, 0.040621436716077534], 'note': [0.2674863938722032, 0.1912770809578107, 0.7028824833702882, 0.7773660205245154], 'edge': [0.02862326143922596, 0.014110604332953249, 0.9429550493852046, 0.955387685290764], 'key': [0.029631122757508566, 0.1912770809578107, 0.236847409796412, 0.7773660205245154], 'summary': [0.029631122757508566, 0.05629988597491448, 0.9407377544849829, 0.13426453819840364], 'heading': [0.029631122757508566, 0.014965792474344356, 0.23704898206006852, 0.040621436716077534], 'page': [0.0, 0.0, 1.0, 1.0], 'date': [0.7776657931868575, 0.014965792474344356, 0.19270308405563394, 0.040621436716077534]}, {'QR': [-0.00020157226365652087, -0.00014253135689851768, -0.00020157226365652087, -0.00014253135689851768], 'key': [0.029631122757508566, 0.014965792474344356, 0.236847409796412, 0.9660775370581528], 'page': [0.0, 0.0, 1.0, 1.0], 'edge': [0.02862326143922596, 0.014110604332953249, 0.9429550493852046, 0.9677879133409351], 'note': [0.2674863938722032, 0.014965792474344356, 0.7028824833702882, 0.9660775370581528]}]
# structures =[{'heading': [-148.0, -106.0, -1176.0, -285.0], 'date': [-3859.0, -106.0, -956.0, -285.0], 'QR': [-0.0, -0.0, 1.0, 1.0], 'note': [-1328.0, -1343.0, -3487.0, -5454.0], 'sub-heading': [-1327.0, -106.0, -2527.0, -285.0], 'key': [-148.0, -1343.0, -1175.0, -5454.0], 'page': [-1.0, -1.0, -4961.0, -7016.0], 'summary': [-148.0, -396.0, -4667.0, -942.0], 'edge': [-143.0, -100.0, -4678.0, -6703.0]}, {'key': [-148.0, -106.0, -1175.0, -6778.0], 'page': [-1.0, -1.0, -4961.0, -7016.0], 'edge': [-143.0, -100.0, -4678.0, -6790.0], 'note': [-1328.0, -106.0, -3487.0, -6778.0], 'QR': [-0.0, -0.0, 1.0, 1.0]}]

#note_alt
structures = [{'sub-heading': [-2.9976825028968714, -0.37543453070683663, 2.9281575898030128, 0.3302433371958285], 'edge': [-4.369640787949015, -0.3823870220162225, 5.420625724217845, 7.767091541135573], 'summary': [-4.363847045191194, -0.039397450753186555, 5.407879490150638, 1.0915411355735805], 'page': [-4.534183082271147, -0.49710312862108924, 5.748551564310545, 8.129779837775203], 'heading': [-4.363847045191194, -0.37543453070683663, 1.3626882966396292, 0.3302433371958285], 'key': [-4.363847045191194, 1.0579374275782156, 1.361529548088065, 6.31981460023175], 'QR': [0.0, 0.0, 1.0, 1.0], 'note': [-2.996523754345307, 1.0579374275782156, 4.040556199304751, 6.31981460023175], 'date': [-0.06373117033603708, -0.37543453070683663, 1.1077636152954808, 0.3302433371958285]}, {'key': [-148.0, -106.0, -1175.0, -6778.0], 'page': [-1.0, -1.0, -4961.0, -7016.0], 'edge': [-143.0, -100.0, -4678.0, -6790.0], 'note': [-1328.0, -106.0, -3487.0, -6778.0], 'QR': [-0.0, -0.0, 1.0, 1.0]}]
# structures =[{'page': [-5.207621550591327, -0.6307490144546649, 6.519053876478318, 9.219448094612352], '6': [-5.014454664914586, -0.492772667542707, 1.545335085413929, 0.3745072273324573], 'QR': [0.0, 0.0, 1.0, 1.0], '2': [-5.014454664914586, 1.1327201051248357, 1.5440210249671484, 7.16688567674113], 'edge': [-5.021024967148489, -0.5006570302233903, 6.147174770039422, 8.80814717477004], '3': [-5.014454664914586, -0.1116951379763469, 6.132720105124836, 1.2378449408672798], '1': [-3.463863337713535, 1.1327201051248357, 4.582128777923785, 7.16688567674113], '5': [-3.4651773981603156, -0.492772667542707, 3.320630749014455, 0.3745072273324573], '4': [-0.13797634691195795, -0.492772667542707, 1.2562417871222076, 0.3745072273324573]}, {'page': [-1.0, -1.0, -4961.0, -7016.0], '7': [-148.0, -106.0, -1175.0, -6778.0], 'QR': [-0.0, -0.0, 1.0, 1.0], 'edge': [-143.0, -100.0, -4678.0, -6790.0]}]

mode=2

# page=cv2.imread('cache/t11.jpg')
# page=cv2.imread('xxx.jpg')

# imgPath='cache/t2.jpg'
imgPath='cache/t14.jpg'
# imgPath='cache/note.jpg'

page=cv2.imread(imgPath)
pageGray=cv2.cvtColor(page,cv2.COLOR_BGR2GRAY)
xc, yc, wc, hc = locateQR(pageGray.copy(), returnArray=0)  # x (QR)code, y (QR)code
hp, wp,Chanel = page.shape  # hp height of page, wp width of page

print([xc, yc, wc, hc])
if mode==0:
    for name, part in structures[0].items():
        x, y, w, h = part

        page2 = page.copy()
        x, y, w, h = [int(x * wp), int(y * hp), int(w * wp), int(h * hp)]
        cv2.rectangle(page2, (x, y), (x + w, y + h), (0, 255, 0), 5)

        print(name)
        print(part)
        print([x, y, w, h])
        print("\n")
        viewPage(page2, resizeFactor=0.3)


elif mode==1:
    raise Exception("unable to find counter")
elif mode==2:
    for name, part in structures[0].items():
        x,y,w,h=part


        # position=[int(x*wc)+xc,int(y*hc)+yc,int(w*wc),int(h*hc)]
        # crop=cropImg(page,position)
        # viewPage(crop)

        page2=page.copy()
        x,y,w,h=[int(x*wc)+xc,int(y*hc)+yc,int(w*wc),int(h*hc)]
        cv2.rectangle(page2, (x, y), (x + w, y + h), (0, 255, 0), 5)

        print(name)
        print(part)
        print([x,y,w,h])
        print("\n")
        viewPage(page2,resizeFactor=0.3)
else:
    raise Exception("error")